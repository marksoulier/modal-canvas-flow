// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://apxkjjrretikisblkdnw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFweGtqanJyZXRpa2lzYmxrZG53Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4NzU5NTQsImV4cCI6MjA2ODQ1MTk1NH0.HJWgkxyjIi3JW9iVMalWGQ6RNsddQKwMJ2k372aJKOk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});


// Function to call Supabase Edge Functions with proper auth
export const callSupabaseFunction = async (functionName: string, body: any, authToken?: string) => {
  const response = await fetch(`${SUPABASE_URL}/functions/v1/${functionName}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'apikey': SUPABASE_PUBLISHABLE_KEY,
      'Authorization': `Bearer ${authToken || SUPABASE_PUBLISHABLE_KEY}`,
    },
    body: JSON.stringify(body),
  })

  if (!response.ok) {
    const errorData = await response.json().catch(() => ({}))
    throw new Error(errorData.error || `HTTP ${response.status}`)
  }

  return await response.json()
}